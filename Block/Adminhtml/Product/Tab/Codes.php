<?php
/**
 * Created by PhpStorm.
 * User: amuh
 * Date: 3/24/2020
 * Time: 3:06 PM
 */

namespace MagArs\DigitalCodes\Block\Adminhtml\Product\Tab;


use MagArs\DigitalCodes\Model\CodeFactory;
use Magento\Backend\Block\Widget\Grid\Extended;

class Codes extends Extended{

    /**
     * Core registry
     *
     * @var \Magento\Framework\Registry
     */
    private $_coreRegistry;

    /**
     * @var CodeFactory
     */
    private $_codeFactory;

    public function __construct(
        \Magento\Backend\Block\Template\Context $context,
        \Magento\Backend\Helper\Data $backendHelper,
        \Magento\Framework\Registry $coreRegistry,
        CodeFactory $codeFactory,
        array $data = []
    ) {
        $this->_coreRegistry = $coreRegistry;
        $this->_codeFactory = $codeFactory;
        parent::__construct($context, $backendHelper, $data);
    }

    protected function _construct() {
        parent::_construct();
        $this->setId('catalog_product_codes');
        $this->setDefaultSort('id');
        $this->setUseAjax(true);
    }

    public function toHtml() {
        return parent::toHtml(); // TODO: Change the autogenerated stub
    }

    /**
     * @return array|null
     */
    public function getProduct()
    {
        return $this->_coreRegistry->registry('product');
    }

    protected function _prepareCollection() {
        if ($this->getProduct()->getId()) {
            $this->setDefaultFilter(['in_product' => 1]);
        }
        $collection = $this->_codeFactory->create()->getCollection();

        $this->setCollection($collection);


        $productIds = $this->_getSelectedProducts();
        if (empty($productIds)) {
            $productIds = 0;
        }
        $this->getCollection()->addFieldToFilter('product_id', ['in' => $productIds]);
        echo $this->getCollection()->getSelect();exit;

        return parent::_prepareCollection();
    }

    /**
     * @return array
     */
    protected function _getSelectedProducts()
    {
        $products = $this->getRequest()->getPost('selected_products');
        if ($products === null) {
            $products = $this->getProduct()->getCodesPosition();
            return array_keys($products);
        }
        return $products;
    }

}
